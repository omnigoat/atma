<?xml version="1.0" encoding="utf-8"?>

<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

	<!-- MATH -->
	<Type Name="atma::math::vector4f">
		<DisplayString>{{ {x}, {y}, {z}, {w} }}</DisplayString>
		<Expand>
			<Item Name="x">x</Item>
			<Item Name="y">y</Item>
			<Item Name="z">z</Item>
			<Item Name="w">w</Item>
		</Expand>
	</Type>

	<Type Name="atma::math::vector4i">
		<DisplayString>{{ {x}, {y}, {z}, {w} }}</DisplayString>
		<Expand>
			<Item Name="x">x</Item>
			<Item Name="y">y</Item>
			<Item Name="z">z</Item>
			<Item Name="w">w</Item>
		</Expand>
	</Type>

	<!-- GENERAL -->
	<Type Name="atma::intrusive_ptr&lt;*&gt;">
		<DisplayString>{px}</DisplayString>
		<Expand>
			<ExpandedItem>px</ExpandedItem>
		</Expand>
	</Type>

	<Type Name="atma::vector&lt;*,*&gt;">
		<DisplayString>{{ size={size_} }}</DisplayString>
		<Expand>
			<Item Name="capacity">capacity_</Item>
			<Item Name="size">size_</Item>
			<ArrayItems>
				<Size>size_</Size>
				<ValuePointer>imem_.ptr</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>

	<Type Name="atma::base_lockfree_queue_t::housekeeping_t">
		<DisplayString>{{ buffer-size={buffer_size_} }}</DisplayString>
		<Expand>
			<Synthetic Name="r">
				<DisplayString>{r} ({r % buffer_size_} : {r / buffer_size_})</DisplayString>
			</Synthetic>
			<Synthetic Name="w">
				<DisplayString>{w} ({w % buffer_size_} : {w / buffer_size_})</DisplayString>
			</Synthetic>
			<Synthetic Name="e">
				<DisplayString>{e} ({e % buffer_size_} : {e / buffer_size_})</DisplayString>
			</Synthetic>
			<Synthetic Name="f">
				<DisplayString>{f} ({f % buffer_size_} : {f / buffer_size_})</DisplayString>
			</Synthetic>
		</Expand>
	</Type>

	<!-- rope_node_t -->
	<Type Name="std::variant&lt;atma::_rope_::node_internal_t&lt;*&gt;, atma::_rope_::node_leaf_t&lt;*&gt;&gt;">
		<DisplayString Condition="_Which==0">{{ internal-node }}</DisplayString>
		<DisplayString Condition="_Which==1">{{ leaf-node={((atma::_rope_::node_leaf_t&lt;$T1&gt;&amp;)_Tail).buf.chars_,[((atma::_rope_::node_leaf_t&lt;$T1&gt;&amp;)_Tail).buf.size_]s8} }}</DisplayString>

		<Expand>
			<!-- internal-node children -->
			<ArrayItems Condition="_Which==0">
				<Size>$T1::branching_factor</Size>
				<ValuePointer>((atma::_rope_::node_internal_t&lt;$T1&gt;&amp;)_Head).children_._Elems</ValuePointer>
			</ArrayItems>

			<!-- leaf-node information -->
			<Item Condition="_Which==1" Name="size">((atma::_rope_::node_leaf_t&lt;$T1&gt;&amp;)_Tail).buf.size_</Item>
			<Item Condition="_Which==1" Name="buf">((atma::_rope_::node_leaf_t&lt;$T1&gt;&amp;)_Tail).buf</Item>
		</Expand>
	</Type>

	<!-- node_leaf_t -->
	<Type Name="atma::_rope_::node_leaf_t&lt;*&gt;">
		<DisplayString>{buf.chars_,[buf.size_]s8}</DisplayString>
		<Expand>
			<Item Name="[buf]">buf</Item>
		</Expand>
	</Type>

	<!-- node_info_t -->
	<Type Name="atma::_rope_::node_info_t&lt;*&gt;">
		<!-- internal-node -->
		<DisplayString Condition="node._Ptr &amp;&amp; node._Ptr->_Which &lt; 0">{{ invalid }}</DisplayString>
		<DisplayString Condition="node._Ptr &amp;&amp; node._Ptr->_Which==0">internal-node {{ chars={characters}, bytes={bytes} }}</DisplayString>
		<!-- introspect the variant to show only the bits of the storage we're valid for -->
		<DisplayString Condition="node._Ptr &amp;&amp; node._Ptr->_Which==1">leaf-node {{ chars={characters}, bytes={bytes}, {((atma::_rope_::node_leaf_t&lt;$T1&gt;&amp;)node._Ptr->_Tail).buf.chars_,[characters]s8} }}</DisplayString>

		<Expand>
			<Item Name="bytes">bytes</Item>
			<Item Name="characters">characters</Item>
			<Item Name="line_breaks">line_breaks</Item>
			<Item Name="node">node</Item>

			<!-- internal-node members -->
			<Item Condition="node._Ptr &amp;&amp; node._Ptr->_Which==0" Name="internal-node [children]">((atma::_rope_::node_internal_t&lt;$T1&gt;&amp;)node._Ptr->_Head).children_</Item>

			<!-- leaf-node members -->
			<Item Condition="node._Ptr &amp;&amp; node._Ptr->_Which==1" Name="leaf-node [text]">((atma::_rope_::node_leaf_t&lt;$T1&gt;&amp;)node._Ptr->_Tail).buf.chars_,[characters]s8</Item>
		</Expand>
	</Type>

</AutoVisualizer>
